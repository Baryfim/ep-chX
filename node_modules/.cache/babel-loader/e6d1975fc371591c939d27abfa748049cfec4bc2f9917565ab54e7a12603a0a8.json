{"ast":null,"code":"var _jsxFileName = \"/home/serafim/ep-chX/src/pages/Info/Info.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./Info.module.css\";\nimport { useEffect, useState } from \"react\";\nimport CardsServices from \"../../API/cardsService\";\nimport Continer from \"../../components/Continer/Continer\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = () => {\n  _s();\n  const navigate = useNavigate();\n  const [cards, setCards] = useState([]);\n  const HrefItems = window.location.href.split(\"/\");\n  const id = HrefItems[HrefItems.length - 1];\n  useEffect(() => {\n    let cardsFetch = CardsServices.getAll();\n    cardsFetch.then(result => {\n      const cardsArray = result;\n      setCards(cardsArray);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Continer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.InfoBlockTitle,\n      children: \"\\u041C\\u043E\\u043C\\u0430\\u043D\\u0442\\u0425\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), cards.map(card => String(card.id) === id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.InfoBlocks,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.InfoTextBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.DateLabel,\n          children: [card.date, \".\", card.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.NameBlockLabel,\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.InfoText__data,\n          children: card.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.BtnsBlocks,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.MainBtn,\n            onClick: () => navigate(\"/\"),\n            children: \"\\u0413\\u0430\\u043B\\u043E\\u045E\\u043D\\u0430\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: card.Link,\n            className: classes.LinkBlock,\n            children: \"\\u0411\\u043E\\u043B\\u044C\\u0448 \\u0456\\u043D\\u0444\\u0430\\u0440\\u043C\\u0430\\u0446\\u044B\\u0456\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.InfoImagesBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.LeftImages,\n          children: card.leftImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            width: 256,\n            height: 200,\n            alt: image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.RightImages,\n          children: card.rightImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            width: 256,\n            alt: image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this) : null)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Info, \"rVDTioR+zPKbZC+k2UUuDGwiObA=\", false, function () {\n  return [useNavigate];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["classes","useEffect","useState","CardsServices","Continer","Link","useNavigate","jsxDEV","_jsxDEV","Info","_s","navigate","cards","setCards","HrefItems","window","location","href","split","id","length","cardsFetch","getAll","then","result","cardsArray","children","className","InfoBlockTitle","fileName","_jsxFileName","lineNumber","columnNumber","map","card","String","InfoBlocks","InfoTextBlock","DateLabel","date","year","NameBlockLabel","name","InfoText__data","text","BtnsBlocks","MainBtn","onClick","to","LinkBlock","InfoImagesBlock","LeftImages","leftImages","image","index","src","width","height","alt","RightImages","rightImages","_c","$RefreshReg$"],"sources":["/home/serafim/ep-chX/src/pages/Info/Info.jsx"],"sourcesContent":["import classes from \"./Info.module.css\";\nimport { useEffect, useState } from \"react\";\nimport CardsServices from \"../../API/cardsService\";\nimport Continer from \"../../components/Continer/Continer\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst Info = () => {\n    const navigate = useNavigate()\n    const [cards, setCards] = useState([]);\n    const HrefItems = window.location.href.split(\"/\");\n    const id = HrefItems[HrefItems.length - 1];\n\n    useEffect(() => {\n        let cardsFetch = CardsServices.getAll();\n        cardsFetch\n            .then(result => {\n                const cardsArray = result;\n                setCards(cardsArray);\n            });\n    }, []);\n\n    return (\n        <Continer>\n            <h1 className={classes.InfoBlockTitle}>\n                МомантХ\n            </h1>\n            {cards.map((card) => (\n                String(card.id) === id ? (\n                    <div className={classes.InfoBlocks} key={card.id}>\n                        <div className={classes.InfoTextBlock}>\n                            <h1 className={classes.DateLabel}>{card.date}.{card.year}</h1>\n                            <h2 className={classes.NameBlockLabel}>{card.name}</h2>\n                            <p className={classes.InfoText__data}>\n                                {card.text}\n                            </p>\n                            <div className={classes.BtnsBlocks}>\n                                <button className={classes.MainBtn} onClick={() => navigate(\"/\")}>\n                                    Галоўная\n                                </button>\n                                <Link to={card.Link} className={classes.LinkBlock}>\n                                    Больш інфармацыі\n                                </Link>\n                            </div>\n                        </div>\n                        <div className={classes.InfoImagesBlock}>\n                            <div className={classes.LeftImages}>\n                                {card.leftImages.map((image, index) => (\n                                    <img src={image} key={index} width={256} height={200} alt={image} />\n                                ))}\n                            </div>\n                            <div className={classes.RightImages}>\n                                {card.rightImages.map((image, index) => (\n                                    <img src={image} key={index} width={256} alt={image} />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                ) : null\n            ))}\n        </Continer>\n    );\n};\n\nexport default Info;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}