{"ast":null,"code":"var _jsxFileName = \"/home/serafim/ep-chX/src/components/Calendar/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./Calendar.module.css\";\nimport ArrowLeft from \"../../media/icons/fi-rr-angle-left.svg\";\nimport ArrowRight from \"../../media/icons/fi-rr-angle-right.svg\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport YearsServices from \"../../API/yearsService\";\nimport CardsServices from \"../../API/cardsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = props => {\n  _s();\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const [cards, setCards] = useState([]);\n  const [years, setYears] = useState([1941]);\n  const [seenCardIds, setSeenCardIds] = useState(new Set());\n  useEffect(() => {\n    let years = YearsServices.getAll();\n    years.then(result => {\n      const datesArray = result;\n      setYears(datesArray);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  useEffect(() => {\n    let cardsFetch = CardsServices.getAll();\n    cardsFetch.then(result => {\n      setCards(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.CalendarBlock,\n    children: [props.value !== 0 ? navigate(\"/info/\" + props.value) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CalendarLabelBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: years[page - 1].year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.BtnsPaginations,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.BtnsPagination,\n          onClick: () => {\n            if (page > 1) {\n              setPage(page - 1);\n              setSeenCardIds(new Set()); // Reset seen card IDs when changing the page\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowLeft,\n            alt: \"ArrowLeft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.BtnsPagination,\n          onClick: () => {\n            if (page < years.length) {\n              setPage(page + 1);\n              setSeenCardIds(new Set()); // Reset seen card IDs when changing the page\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ArrowRight,\n            alt: \"ArrowRight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.GridBoxBlock,\n      children: cards.filter(card => card.year === years[page - 1].year).map(card => {\n        if (!seenCardIds.has(card.id)) {\n          seenCardIds.add(card.id);\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/info/\" + card.id,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.CardBlock,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: classes.DateLabel,\n                children: card.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.NameLabel,\n                children: card.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: classes.LabelBlock,\n                children: \"I\\u043D\\u0444\\u0430\\u0440\\u043C\\u0430\\u0446\\u044B\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.DescriptLabel,\n                children: [card.text.slice(0, 122), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"WTOHlfdTnQehuc8hjobCKH8ES6Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["classes","ArrowLeft","ArrowRight","Link","useNavigate","useEffect","useState","YearsServices","CardsServices","jsxDEV","_jsxDEV","Calendar","props","_s","navigate","page","setPage","cards","setCards","years","setYears","seenCardIds","setSeenCardIds","Set","getAll","then","result","datesArray","catch","error","console","cardsFetch","className","CalendarBlock","children","value","CalendarLabelBlock","year","fileName","_jsxFileName","lineNumber","columnNumber","BtnsPaginations","BtnsPagination","onClick","src","alt","length","GridBoxBlock","filter","card","map","has","id","add","to","CardBlock","DateLabel","date","NameLabel","name","LabelBlock","DescriptLabel","text","slice","_c","$RefreshReg$"],"sources":["/home/serafim/ep-chX/src/components/Calendar/Calendar.jsx"],"sourcesContent":["import classes from \"./Calendar.module.css\";\nimport ArrowLeft from \"../../media/icons/fi-rr-angle-left.svg\";\nimport ArrowRight from \"../../media/icons/fi-rr-angle-right.svg\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport YearsServices from \"../../API/yearsService\";\nimport CardsServices from \"../../API/cardsService\";\n\nconst Calendar = (props) => {\n    const navigate = useNavigate()\n    const [page, setPage] = useState(1);\n    const [cards, setCards] = useState([]);\n    const [years, setYears] = useState([1941]);\n    const [seenCardIds, setSeenCardIds] = useState(new Set());\n\n    useEffect(() => {\n        let years = YearsServices.getAll();\n        years\n            .then((result) => {\n                const datesArray = result;\n                setYears(datesArray);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, []);\n\n    useEffect(() => {\n        let cardsFetch = CardsServices.getAll();\n        cardsFetch\n            .then((result) => {\n                setCards(result);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, []);\n\n    return (\n        <div className={classes.CalendarBlock}>\n            {\n                props.value !== 0\n                ? (navigate(\"/info/\" + props.value))\n                : \"\"\n            }\n            <div className={classes.CalendarLabelBlock}>\n                <h1>{years[page - 1].year}</h1>\n                <div className={classes.BtnsPaginations}>\n                    <button className={classes.BtnsPagination} onClick={() => {\n                        if (page > 1) {\n                            setPage(page - 1);\n                            setSeenCardIds(new Set()); // Reset seen card IDs when changing the page\n                        }\n                    }}>\n                        <img src={ArrowLeft} alt=\"ArrowLeft\" />\n                    </button>\n                    <button className={classes.BtnsPagination} onClick={() => {\n                        if (page < years.length) {\n                            setPage(page + 1);\n                            setSeenCardIds(new Set()); // Reset seen card IDs when changing the page\n                        }\n                    }}>\n                        <img src={ArrowRight} alt=\"ArrowRight\" />\n                    </button>\n                </div>\n            </div>\n            <div className={classes.GridBoxBlock}>\n                {cards\n                    .filter((card) => card.year === years[page - 1].year)\n                    .map((card) => {\n                        if (!seenCardIds.has(card.id)) {\n                            seenCardIds.add(card.id);\n                            return (\n                                <Link to={\"/info/\" + card.id} key={card.id}>\n                                    <div className={classes.CardBlock}>\n                                        <h3 className={classes.DateLabel}>{card.date}</h3>\n                                        <p className={classes.NameLabel}>{card.name}</p>\n                                        <h4 className={classes.LabelBlock}>Iнфармацыя</h4>\n                                        <p className={classes.DescriptLabel}>{card.text.slice(0, 122)}...</p>\n                                    </div>\n                                </Link>\n                            );\n                        } else {\n                            return null;\n                        }\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}